# generated by datamodel-codegen:
#   filename:  model.json
#   timestamp: 2021-03-19T22:58:28+00:00

from __future__ import annotations

from typing import Any, List

from pydantic import BaseModel


class USD(BaseModel):
    prefix: str
    suffix: str
    msetupfee: str
    qsetupfee: str
    ssetupfee: str
    asetupfee: str
    bsetupfee: str
    tsetupfee: str
    monthly: str
    quarterly: str
    semiannually: str
    annually: str
    biennially: str
    triennially: str


class Pricing(BaseModel):
    USD: USD


class CustomfieldItem(BaseModel):
    id: int
    name: str
    description: str
    required: str


class Customfields(BaseModel):
    customfield: List[CustomfieldItem]


class USD1(BaseModel):
    msetupfee: str
    qsetupfee: str
    ssetupfee: str
    asetupfee: str
    bsetupfee: str
    tsetupfee: str
    monthly: str
    quarterly: str
    semiannually: str
    annually: str
    biennially: str
    triennially: str


class Pricing1(BaseModel):
    USD: USD1


class OptionItem(BaseModel):
    id: int
    name: str
    rawName: Any
    recurring: int
    required: Any
    pricing: Pricing1


class Options(BaseModel):
    option: List[OptionItem]


class ConfigoptionItem(BaseModel):
    id: int
    name: str
    type: str
    options: Options


class Configoptions(BaseModel):
    configoption: List[ConfigoptionItem]


class ProductItem(BaseModel):
    pid: int
    gid: int
    type: str
    name: str
    description: str
    module: str
    paytype: str
    pricing: Pricing
    customfields: Customfields
    configoptions: Configoptions


class Products(BaseModel):
    product: List[ProductItem]


class Model(BaseModel):
    result: str
    totalresults: int
    products: Products
